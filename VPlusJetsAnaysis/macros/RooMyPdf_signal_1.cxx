/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooMyPdf_signal_1.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooMyPdf_signal_1) 

 RooMyPdf_signal_1::RooMyPdf_signal_1(const char *name, const char *title, 
                        RooAbsReal& _y,
                        RooAbsReal& _alpha,
                        RooAbsReal& _beta,
                        RooAbsReal& _gamma) :
   RooAbsPdf(name,title), 
   y("y","y",this,_y),
    alpha("alpha","alpha",this,_alpha),
    beta("beta","beta",this,_beta),
    gamma("gamma","gamma",this,_gamma)
 { 
 } 


 RooMyPdf_signal_1::RooMyPdf_signal_1(const RooMyPdf_signal_1& other, const char* name) :  
   RooAbsPdf(other,name), 
   y("y",this,other.y),
    alpha("alpha",this,other.alpha),
    beta("beta",this,other.beta),
    gamma("gamma",this,other.gamma)
 { 
 } 



 Double_t RooMyPdf_signal_1::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
//   return (1/alpha * exp(pow(gamma,2)/(2*pow(alpha,2))-((y-beta)/alpha)));
	   return (alpha * exp(-0.5 * pow(((y-beta)/gamma),2)));
 } 



